/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package uk.gov.companieshouse.document.generation.request;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class RenderSubmittedDataDocument extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6310335612358662439L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RenderSubmittedDataDocument\",\"namespace\":\"uk.gov.companieshouse.document.generation.request\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"resource\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"content_type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"document_type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"user_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String id;
  @Deprecated public java.lang.String resource;
  @Deprecated public java.lang.String content_type;
  @Deprecated public java.lang.String document_type;
  @Deprecated public java.lang.String user_id;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public RenderSubmittedDataDocument() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param resource The new value for resource
   * @param content_type The new value for content_type
   * @param document_type The new value for document_type
   * @param user_id The new value for user_id
   */
  public RenderSubmittedDataDocument(java.lang.String id, java.lang.String resource, java.lang.String content_type, java.lang.String document_type, java.lang.String user_id) {
    this.id = id;
    this.resource = resource;
    this.content_type = content_type;
    this.document_type = document_type;
    this.user_id = user_id;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return resource;
    case 2: return content_type;
    case 3: return document_type;
    case 4: return user_id;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.String)value$; break;
    case 1: resource = (java.lang.String)value$; break;
    case 2: content_type = (java.lang.String)value$; break;
    case 3: document_type = (java.lang.String)value$; break;
    case 4: user_id = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'resource' field.
   * @return The value of the 'resource' field.
   */
  public java.lang.String getResource() {
    return resource;
  }

  /**
   * Sets the value of the 'resource' field.
   * @param value the value to set.
   */
  public void setResource(java.lang.String value) {
    this.resource = value;
  }

  /**
   * Gets the value of the 'content_type' field.
   * @return The value of the 'content_type' field.
   */
  public java.lang.String getContentType() {
    return content_type;
  }

  /**
   * Sets the value of the 'content_type' field.
   * @param value the value to set.
   */
  public void setContentType(java.lang.String value) {
    this.content_type = value;
  }

  /**
   * Gets the value of the 'document_type' field.
   * @return The value of the 'document_type' field.
   */
  public java.lang.String getDocumentType() {
    return document_type;
  }

  /**
   * Sets the value of the 'document_type' field.
   * @param value the value to set.
   */
  public void setDocumentType(java.lang.String value) {
    this.document_type = value;
  }

  /**
   * Gets the value of the 'user_id' field.
   * @return The value of the 'user_id' field.
   */
  public java.lang.String getUserId() {
    return user_id;
  }

  /**
   * Sets the value of the 'user_id' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.String value) {
    this.user_id = value;
  }

  /**
   * Creates a new RenderSubmittedDataDocument RecordBuilder.
   * @return A new RenderSubmittedDataDocument RecordBuilder
   */
  public static uk.gov.companieshouse.document.generation.request.RenderSubmittedDataDocument.Builder newBuilder() {
    return new uk.gov.companieshouse.document.generation.request.RenderSubmittedDataDocument.Builder();
  }

  /**
   * Creates a new RenderSubmittedDataDocument RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RenderSubmittedDataDocument RecordBuilder
   */
  public static uk.gov.companieshouse.document.generation.request.RenderSubmittedDataDocument.Builder newBuilder(uk.gov.companieshouse.document.generation.request.RenderSubmittedDataDocument.Builder other) {
    return new uk.gov.companieshouse.document.generation.request.RenderSubmittedDataDocument.Builder(other);
  }

  /**
   * Creates a new RenderSubmittedDataDocument RecordBuilder by copying an existing RenderSubmittedDataDocument instance.
   * @param other The existing instance to copy.
   * @return A new RenderSubmittedDataDocument RecordBuilder
   */
  public static uk.gov.companieshouse.document.generation.request.RenderSubmittedDataDocument.Builder newBuilder(uk.gov.companieshouse.document.generation.request.RenderSubmittedDataDocument other) {
    return new uk.gov.companieshouse.document.generation.request.RenderSubmittedDataDocument.Builder(other);
  }

  /**
   * RecordBuilder for RenderSubmittedDataDocument instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RenderSubmittedDataDocument>
    implements org.apache.avro.data.RecordBuilder<RenderSubmittedDataDocument> {

    private java.lang.String id;
    private java.lang.String resource;
    private java.lang.String content_type;
    private java.lang.String document_type;
    private java.lang.String user_id;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(uk.gov.companieshouse.document.generation.request.RenderSubmittedDataDocument.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.resource)) {
        this.resource = data().deepCopy(fields()[1].schema(), other.resource);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.content_type)) {
        this.content_type = data().deepCopy(fields()[2].schema(), other.content_type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.document_type)) {
        this.document_type = data().deepCopy(fields()[3].schema(), other.document_type);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.user_id)) {
        this.user_id = data().deepCopy(fields()[4].schema(), other.user_id);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing RenderSubmittedDataDocument instance
     * @param other The existing instance to copy.
     */
    private Builder(uk.gov.companieshouse.document.generation.request.RenderSubmittedDataDocument other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.resource)) {
        this.resource = data().deepCopy(fields()[1].schema(), other.resource);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.content_type)) {
        this.content_type = data().deepCopy(fields()[2].schema(), other.content_type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.document_type)) {
        this.document_type = data().deepCopy(fields()[3].schema(), other.document_type);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.user_id)) {
        this.user_id = data().deepCopy(fields()[4].schema(), other.user_id);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.String getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public uk.gov.companieshouse.document.generation.request.RenderSubmittedDataDocument.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.document.generation.request.RenderSubmittedDataDocument.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'resource' field.
      * @return The value.
      */
    public java.lang.String getResource() {
      return resource;
    }

    /**
      * Sets the value of the 'resource' field.
      * @param value The value of 'resource'.
      * @return This builder.
      */
    public uk.gov.companieshouse.document.generation.request.RenderSubmittedDataDocument.Builder setResource(java.lang.String value) {
      validate(fields()[1], value);
      this.resource = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'resource' field has been set.
      * @return True if the 'resource' field has been set, false otherwise.
      */
    public boolean hasResource() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'resource' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.document.generation.request.RenderSubmittedDataDocument.Builder clearResource() {
      resource = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'content_type' field.
      * @return The value.
      */
    public java.lang.String getContentType() {
      return content_type;
    }

    /**
      * Sets the value of the 'content_type' field.
      * @param value The value of 'content_type'.
      * @return This builder.
      */
    public uk.gov.companieshouse.document.generation.request.RenderSubmittedDataDocument.Builder setContentType(java.lang.String value) {
      validate(fields()[2], value);
      this.content_type = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'content_type' field has been set.
      * @return True if the 'content_type' field has been set, false otherwise.
      */
    public boolean hasContentType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'content_type' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.document.generation.request.RenderSubmittedDataDocument.Builder clearContentType() {
      content_type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'document_type' field.
      * @return The value.
      */
    public java.lang.String getDocumentType() {
      return document_type;
    }

    /**
      * Sets the value of the 'document_type' field.
      * @param value The value of 'document_type'.
      * @return This builder.
      */
    public uk.gov.companieshouse.document.generation.request.RenderSubmittedDataDocument.Builder setDocumentType(java.lang.String value) {
      validate(fields()[3], value);
      this.document_type = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'document_type' field has been set.
      * @return True if the 'document_type' field has been set, false otherwise.
      */
    public boolean hasDocumentType() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'document_type' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.document.generation.request.RenderSubmittedDataDocument.Builder clearDocumentType() {
      document_type = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'user_id' field.
      * @return The value.
      */
    public java.lang.String getUserId() {
      return user_id;
    }

    /**
      * Sets the value of the 'user_id' field.
      * @param value The value of 'user_id'.
      * @return This builder.
      */
    public uk.gov.companieshouse.document.generation.request.RenderSubmittedDataDocument.Builder setUserId(java.lang.String value) {
      validate(fields()[4], value);
      this.user_id = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'user_id' field has been set.
      * @return True if the 'user_id' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'user_id' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.document.generation.request.RenderSubmittedDataDocument.Builder clearUserId() {
      user_id = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public RenderSubmittedDataDocument build() {
      try {
        RenderSubmittedDataDocument record = new RenderSubmittedDataDocument();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.resource = fieldSetFlags()[1] ? this.resource : (java.lang.String) defaultValue(fields()[1]);
        record.content_type = fieldSetFlags()[2] ? this.content_type : (java.lang.String) defaultValue(fields()[2]);
        record.document_type = fieldSetFlags()[3] ? this.document_type : (java.lang.String) defaultValue(fields()[3]);
        record.user_id = fieldSetFlags()[4] ? this.user_id : (java.lang.String) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
