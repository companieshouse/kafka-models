/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package uk.gov.companieshouse.filing.processed;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class FilingProcessed extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3668092005315066642L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FilingProcessed\",\"namespace\":\"uk.gov.companieshouse.filing.processed\",\"fields\":[{\"name\":\"application_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"attempt\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"presenter\",\"type\":{\"type\":\"record\",\"name\":\"PresenterRecord\",\"fields\":[{\"name\":\"language\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"user_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"submission\",\"type\":{\"type\":\"record\",\"name\":\"SubmissionRecord\",\"fields\":[{\"name\":\"transaction_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"response\",\"type\":{\"type\":\"record\",\"name\":\"ResponseRecord\",\"fields\":[{\"name\":\"company_name\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"company_number\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"date_of_creation\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"processed_at\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"status\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"submission_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"reject\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"RejectRecord\",\"fields\":[{\"name\":\"reasons_english\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]},{\"name\":\"reasons_welsh\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}]}]}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String application_id;
  @Deprecated public int attempt;
  @Deprecated public java.lang.String channel_id;
  @Deprecated public uk.gov.companieshouse.filing.processed.PresenterRecord presenter;
  @Deprecated public uk.gov.companieshouse.filing.processed.SubmissionRecord submission;
  @Deprecated public uk.gov.companieshouse.filing.processed.ResponseRecord response;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FilingProcessed() {}

  /**
   * All-args constructor.
   * @param application_id The new value for application_id
   * @param attempt The new value for attempt
   * @param channel_id The new value for channel_id
   * @param presenter The new value for presenter
   * @param submission The new value for submission
   * @param response The new value for response
   */
  public FilingProcessed(java.lang.String application_id, java.lang.Integer attempt, java.lang.String channel_id, uk.gov.companieshouse.filing.processed.PresenterRecord presenter, uk.gov.companieshouse.filing.processed.SubmissionRecord submission, uk.gov.companieshouse.filing.processed.ResponseRecord response) {
    this.application_id = application_id;
    this.attempt = attempt;
    this.channel_id = channel_id;
    this.presenter = presenter;
    this.submission = submission;
    this.response = response;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return application_id;
    case 1: return attempt;
    case 2: return channel_id;
    case 3: return presenter;
    case 4: return submission;
    case 5: return response;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: application_id = (java.lang.String)value$; break;
    case 1: attempt = (java.lang.Integer)value$; break;
    case 2: channel_id = (java.lang.String)value$; break;
    case 3: presenter = (uk.gov.companieshouse.filing.processed.PresenterRecord)value$; break;
    case 4: submission = (uk.gov.companieshouse.filing.processed.SubmissionRecord)value$; break;
    case 5: response = (uk.gov.companieshouse.filing.processed.ResponseRecord)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'application_id' field.
   * @return The value of the 'application_id' field.
   */
  public java.lang.String getApplicationId() {
    return application_id;
  }

  /**
   * Sets the value of the 'application_id' field.
   * @param value the value to set.
   */
  public void setApplicationId(java.lang.String value) {
    this.application_id = value;
  }

  /**
   * Gets the value of the 'attempt' field.
   * @return The value of the 'attempt' field.
   */
  public java.lang.Integer getAttempt() {
    return attempt;
  }

  /**
   * Sets the value of the 'attempt' field.
   * @param value the value to set.
   */
  public void setAttempt(java.lang.Integer value) {
    this.attempt = value;
  }

  /**
   * Gets the value of the 'channel_id' field.
   * @return The value of the 'channel_id' field.
   */
  public java.lang.String getChannelId() {
    return channel_id;
  }

  /**
   * Sets the value of the 'channel_id' field.
   * @param value the value to set.
   */
  public void setChannelId(java.lang.String value) {
    this.channel_id = value;
  }

  /**
   * Gets the value of the 'presenter' field.
   * @return The value of the 'presenter' field.
   */
  public uk.gov.companieshouse.filing.processed.PresenterRecord getPresenter() {
    return presenter;
  }

  /**
   * Sets the value of the 'presenter' field.
   * @param value the value to set.
   */
  public void setPresenter(uk.gov.companieshouse.filing.processed.PresenterRecord value) {
    this.presenter = value;
  }

  /**
   * Gets the value of the 'submission' field.
   * @return The value of the 'submission' field.
   */
  public uk.gov.companieshouse.filing.processed.SubmissionRecord getSubmission() {
    return submission;
  }

  /**
   * Sets the value of the 'submission' field.
   * @param value the value to set.
   */
  public void setSubmission(uk.gov.companieshouse.filing.processed.SubmissionRecord value) {
    this.submission = value;
  }

  /**
   * Gets the value of the 'response' field.
   * @return The value of the 'response' field.
   */
  public uk.gov.companieshouse.filing.processed.ResponseRecord getResponse() {
    return response;
  }

  /**
   * Sets the value of the 'response' field.
   * @param value the value to set.
   */
  public void setResponse(uk.gov.companieshouse.filing.processed.ResponseRecord value) {
    this.response = value;
  }

  /**
   * Creates a new FilingProcessed RecordBuilder.
   * @return A new FilingProcessed RecordBuilder
   */
  public static uk.gov.companieshouse.filing.processed.FilingProcessed.Builder newBuilder() {
    return new uk.gov.companieshouse.filing.processed.FilingProcessed.Builder();
  }

  /**
   * Creates a new FilingProcessed RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FilingProcessed RecordBuilder
   */
  public static uk.gov.companieshouse.filing.processed.FilingProcessed.Builder newBuilder(uk.gov.companieshouse.filing.processed.FilingProcessed.Builder other) {
    return new uk.gov.companieshouse.filing.processed.FilingProcessed.Builder(other);
  }

  /**
   * Creates a new FilingProcessed RecordBuilder by copying an existing FilingProcessed instance.
   * @param other The existing instance to copy.
   * @return A new FilingProcessed RecordBuilder
   */
  public static uk.gov.companieshouse.filing.processed.FilingProcessed.Builder newBuilder(uk.gov.companieshouse.filing.processed.FilingProcessed other) {
    return new uk.gov.companieshouse.filing.processed.FilingProcessed.Builder(other);
  }

  /**
   * RecordBuilder for FilingProcessed instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FilingProcessed>
    implements org.apache.avro.data.RecordBuilder<FilingProcessed> {

    private java.lang.String application_id;
    private int attempt;
    private java.lang.String channel_id;
    private uk.gov.companieshouse.filing.processed.PresenterRecord presenter;
    private uk.gov.companieshouse.filing.processed.PresenterRecord.Builder presenterBuilder;
    private uk.gov.companieshouse.filing.processed.SubmissionRecord submission;
    private uk.gov.companieshouse.filing.processed.SubmissionRecord.Builder submissionBuilder;
    private uk.gov.companieshouse.filing.processed.ResponseRecord response;
    private uk.gov.companieshouse.filing.processed.ResponseRecord.Builder responseBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(uk.gov.companieshouse.filing.processed.FilingProcessed.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.application_id)) {
        this.application_id = data().deepCopy(fields()[0].schema(), other.application_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.attempt)) {
        this.attempt = data().deepCopy(fields()[1].schema(), other.attempt);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.channel_id)) {
        this.channel_id = data().deepCopy(fields()[2].schema(), other.channel_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.presenter)) {
        this.presenter = data().deepCopy(fields()[3].schema(), other.presenter);
        fieldSetFlags()[3] = true;
      }
      if (other.hasPresenterBuilder()) {
        this.presenterBuilder = uk.gov.companieshouse.filing.processed.PresenterRecord.newBuilder(other.getPresenterBuilder());
      }
      if (isValidValue(fields()[4], other.submission)) {
        this.submission = data().deepCopy(fields()[4].schema(), other.submission);
        fieldSetFlags()[4] = true;
      }
      if (other.hasSubmissionBuilder()) {
        this.submissionBuilder = uk.gov.companieshouse.filing.processed.SubmissionRecord.newBuilder(other.getSubmissionBuilder());
      }
      if (isValidValue(fields()[5], other.response)) {
        this.response = data().deepCopy(fields()[5].schema(), other.response);
        fieldSetFlags()[5] = true;
      }
      if (other.hasResponseBuilder()) {
        this.responseBuilder = uk.gov.companieshouse.filing.processed.ResponseRecord.newBuilder(other.getResponseBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing FilingProcessed instance
     * @param other The existing instance to copy.
     */
    private Builder(uk.gov.companieshouse.filing.processed.FilingProcessed other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.application_id)) {
        this.application_id = data().deepCopy(fields()[0].schema(), other.application_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.attempt)) {
        this.attempt = data().deepCopy(fields()[1].schema(), other.attempt);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.channel_id)) {
        this.channel_id = data().deepCopy(fields()[2].schema(), other.channel_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.presenter)) {
        this.presenter = data().deepCopy(fields()[3].schema(), other.presenter);
        fieldSetFlags()[3] = true;
      }
      this.presenterBuilder = null;
      if (isValidValue(fields()[4], other.submission)) {
        this.submission = data().deepCopy(fields()[4].schema(), other.submission);
        fieldSetFlags()[4] = true;
      }
      this.submissionBuilder = null;
      if (isValidValue(fields()[5], other.response)) {
        this.response = data().deepCopy(fields()[5].schema(), other.response);
        fieldSetFlags()[5] = true;
      }
      this.responseBuilder = null;
    }

    /**
      * Gets the value of the 'application_id' field.
      * @return The value.
      */
    public java.lang.String getApplicationId() {
      return application_id;
    }

    /**
      * Sets the value of the 'application_id' field.
      * @param value The value of 'application_id'.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.FilingProcessed.Builder setApplicationId(java.lang.String value) {
      validate(fields()[0], value);
      this.application_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'application_id' field has been set.
      * @return True if the 'application_id' field has been set, false otherwise.
      */
    public boolean hasApplicationId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'application_id' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.FilingProcessed.Builder clearApplicationId() {
      application_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'attempt' field.
      * @return The value.
      */
    public java.lang.Integer getAttempt() {
      return attempt;
    }

    /**
      * Sets the value of the 'attempt' field.
      * @param value The value of 'attempt'.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.FilingProcessed.Builder setAttempt(int value) {
      validate(fields()[1], value);
      this.attempt = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'attempt' field has been set.
      * @return True if the 'attempt' field has been set, false otherwise.
      */
    public boolean hasAttempt() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'attempt' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.FilingProcessed.Builder clearAttempt() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'channel_id' field.
      * @return The value.
      */
    public java.lang.String getChannelId() {
      return channel_id;
    }

    /**
      * Sets the value of the 'channel_id' field.
      * @param value The value of 'channel_id'.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.FilingProcessed.Builder setChannelId(java.lang.String value) {
      validate(fields()[2], value);
      this.channel_id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'channel_id' field has been set.
      * @return True if the 'channel_id' field has been set, false otherwise.
      */
    public boolean hasChannelId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'channel_id' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.FilingProcessed.Builder clearChannelId() {
      channel_id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'presenter' field.
      * @return The value.
      */
    public uk.gov.companieshouse.filing.processed.PresenterRecord getPresenter() {
      return presenter;
    }

    /**
      * Sets the value of the 'presenter' field.
      * @param value The value of 'presenter'.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.FilingProcessed.Builder setPresenter(uk.gov.companieshouse.filing.processed.PresenterRecord value) {
      validate(fields()[3], value);
      this.presenterBuilder = null;
      this.presenter = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'presenter' field has been set.
      * @return True if the 'presenter' field has been set, false otherwise.
      */
    public boolean hasPresenter() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'presenter' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public uk.gov.companieshouse.filing.processed.PresenterRecord.Builder getPresenterBuilder() {
      if (presenterBuilder == null) {
        if (hasPresenter()) {
          setPresenterBuilder(uk.gov.companieshouse.filing.processed.PresenterRecord.newBuilder(presenter));
        } else {
          setPresenterBuilder(uk.gov.companieshouse.filing.processed.PresenterRecord.newBuilder());
        }
      }
      return presenterBuilder;
    }

    /**
     * Sets the Builder instance for the 'presenter' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public uk.gov.companieshouse.filing.processed.FilingProcessed.Builder setPresenterBuilder(uk.gov.companieshouse.filing.processed.PresenterRecord.Builder value) {
      clearPresenter();
      presenterBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'presenter' field has an active Builder instance
     * @return True if the 'presenter' field has an active Builder instance
     */
    public boolean hasPresenterBuilder() {
      return presenterBuilder != null;
    }

    /**
      * Clears the value of the 'presenter' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.FilingProcessed.Builder clearPresenter() {
      presenter = null;
      presenterBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'submission' field.
      * @return The value.
      */
    public uk.gov.companieshouse.filing.processed.SubmissionRecord getSubmission() {
      return submission;
    }

    /**
      * Sets the value of the 'submission' field.
      * @param value The value of 'submission'.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.FilingProcessed.Builder setSubmission(uk.gov.companieshouse.filing.processed.SubmissionRecord value) {
      validate(fields()[4], value);
      this.submissionBuilder = null;
      this.submission = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'submission' field has been set.
      * @return True if the 'submission' field has been set, false otherwise.
      */
    public boolean hasSubmission() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'submission' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public uk.gov.companieshouse.filing.processed.SubmissionRecord.Builder getSubmissionBuilder() {
      if (submissionBuilder == null) {
        if (hasSubmission()) {
          setSubmissionBuilder(uk.gov.companieshouse.filing.processed.SubmissionRecord.newBuilder(submission));
        } else {
          setSubmissionBuilder(uk.gov.companieshouse.filing.processed.SubmissionRecord.newBuilder());
        }
      }
      return submissionBuilder;
    }

    /**
     * Sets the Builder instance for the 'submission' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public uk.gov.companieshouse.filing.processed.FilingProcessed.Builder setSubmissionBuilder(uk.gov.companieshouse.filing.processed.SubmissionRecord.Builder value) {
      clearSubmission();
      submissionBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'submission' field has an active Builder instance
     * @return True if the 'submission' field has an active Builder instance
     */
    public boolean hasSubmissionBuilder() {
      return submissionBuilder != null;
    }

    /**
      * Clears the value of the 'submission' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.FilingProcessed.Builder clearSubmission() {
      submission = null;
      submissionBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'response' field.
      * @return The value.
      */
    public uk.gov.companieshouse.filing.processed.ResponseRecord getResponse() {
      return response;
    }

    /**
      * Sets the value of the 'response' field.
      * @param value The value of 'response'.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.FilingProcessed.Builder setResponse(uk.gov.companieshouse.filing.processed.ResponseRecord value) {
      validate(fields()[5], value);
      this.responseBuilder = null;
      this.response = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'response' field has been set.
      * @return True if the 'response' field has been set, false otherwise.
      */
    public boolean hasResponse() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'response' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public uk.gov.companieshouse.filing.processed.ResponseRecord.Builder getResponseBuilder() {
      if (responseBuilder == null) {
        if (hasResponse()) {
          setResponseBuilder(uk.gov.companieshouse.filing.processed.ResponseRecord.newBuilder(response));
        } else {
          setResponseBuilder(uk.gov.companieshouse.filing.processed.ResponseRecord.newBuilder());
        }
      }
      return responseBuilder;
    }

    /**
     * Sets the Builder instance for the 'response' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public uk.gov.companieshouse.filing.processed.FilingProcessed.Builder setResponseBuilder(uk.gov.companieshouse.filing.processed.ResponseRecord.Builder value) {
      clearResponse();
      responseBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'response' field has an active Builder instance
     * @return True if the 'response' field has an active Builder instance
     */
    public boolean hasResponseBuilder() {
      return responseBuilder != null;
    }

    /**
      * Clears the value of the 'response' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.FilingProcessed.Builder clearResponse() {
      response = null;
      responseBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public FilingProcessed build() {
      try {
        FilingProcessed record = new FilingProcessed();
        record.application_id = fieldSetFlags()[0] ? this.application_id : (java.lang.String) defaultValue(fields()[0]);
        record.attempt = fieldSetFlags()[1] ? this.attempt : (java.lang.Integer) defaultValue(fields()[1]);
        record.channel_id = fieldSetFlags()[2] ? this.channel_id : (java.lang.String) defaultValue(fields()[2]);
        if (presenterBuilder != null) {
          record.presenter = this.presenterBuilder.build();
        } else {
          record.presenter = fieldSetFlags()[3] ? this.presenter : (uk.gov.companieshouse.filing.processed.PresenterRecord) defaultValue(fields()[3]);
        }
        if (submissionBuilder != null) {
          record.submission = this.submissionBuilder.build();
        } else {
          record.submission = fieldSetFlags()[4] ? this.submission : (uk.gov.companieshouse.filing.processed.SubmissionRecord) defaultValue(fields()[4]);
        }
        if (responseBuilder != null) {
          record.response = this.responseBuilder.build();
        } else {
          record.response = fieldSetFlags()[5] ? this.response : (uk.gov.companieshouse.filing.processed.ResponseRecord) defaultValue(fields()[5]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
