/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package uk.gov.companieshouse.filing.processed;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ResponseRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1496536288476680957L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ResponseRecord\",\"namespace\":\"uk.gov.companieshouse.filing.processed\",\"fields\":[{\"name\":\"company_name\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"company_number\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"date_of_creation\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"processed_at\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"status\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"submission_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"reject\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"RejectRecord\",\"fields\":[{\"name\":\"reasons_english\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]},{\"name\":\"reasons_welsh\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}]}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String company_name;
  @Deprecated public java.lang.String company_number;
  @Deprecated public java.lang.String date_of_creation;
  @Deprecated public java.lang.String processed_at;
  @Deprecated public java.lang.String status;
  @Deprecated public java.lang.String submission_id;
  @Deprecated public uk.gov.companieshouse.filing.processed.RejectRecord reject;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ResponseRecord() {}

  /**
   * All-args constructor.
   * @param company_name The new value for company_name
   * @param company_number The new value for company_number
   * @param date_of_creation The new value for date_of_creation
   * @param processed_at The new value for processed_at
   * @param status The new value for status
   * @param submission_id The new value for submission_id
   * @param reject The new value for reject
   */
  public ResponseRecord(java.lang.String company_name, java.lang.String company_number, java.lang.String date_of_creation, java.lang.String processed_at, java.lang.String status, java.lang.String submission_id, uk.gov.companieshouse.filing.processed.RejectRecord reject) {
    this.company_name = company_name;
    this.company_number = company_number;
    this.date_of_creation = date_of_creation;
    this.processed_at = processed_at;
    this.status = status;
    this.submission_id = submission_id;
    this.reject = reject;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return company_name;
    case 1: return company_number;
    case 2: return date_of_creation;
    case 3: return processed_at;
    case 4: return status;
    case 5: return submission_id;
    case 6: return reject;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: company_name = (java.lang.String)value$; break;
    case 1: company_number = (java.lang.String)value$; break;
    case 2: date_of_creation = (java.lang.String)value$; break;
    case 3: processed_at = (java.lang.String)value$; break;
    case 4: status = (java.lang.String)value$; break;
    case 5: submission_id = (java.lang.String)value$; break;
    case 6: reject = (uk.gov.companieshouse.filing.processed.RejectRecord)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'company_name' field.
   * @return The value of the 'company_name' field.
   */
  public java.lang.String getCompanyName() {
    return company_name;
  }

  /**
   * Sets the value of the 'company_name' field.
   * @param value the value to set.
   */
  public void setCompanyName(java.lang.String value) {
    this.company_name = value;
  }

  /**
   * Gets the value of the 'company_number' field.
   * @return The value of the 'company_number' field.
   */
  public java.lang.String getCompanyNumber() {
    return company_number;
  }

  /**
   * Sets the value of the 'company_number' field.
   * @param value the value to set.
   */
  public void setCompanyNumber(java.lang.String value) {
    this.company_number = value;
  }

  /**
   * Gets the value of the 'date_of_creation' field.
   * @return The value of the 'date_of_creation' field.
   */
  public java.lang.String getDateOfCreation() {
    return date_of_creation;
  }

  /**
   * Sets the value of the 'date_of_creation' field.
   * @param value the value to set.
   */
  public void setDateOfCreation(java.lang.String value) {
    this.date_of_creation = value;
  }

  /**
   * Gets the value of the 'processed_at' field.
   * @return The value of the 'processed_at' field.
   */
  public java.lang.String getProcessedAt() {
    return processed_at;
  }

  /**
   * Sets the value of the 'processed_at' field.
   * @param value the value to set.
   */
  public void setProcessedAt(java.lang.String value) {
    this.processed_at = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'submission_id' field.
   * @return The value of the 'submission_id' field.
   */
  public java.lang.String getSubmissionId() {
    return submission_id;
  }

  /**
   * Sets the value of the 'submission_id' field.
   * @param value the value to set.
   */
  public void setSubmissionId(java.lang.String value) {
    this.submission_id = value;
  }

  /**
   * Gets the value of the 'reject' field.
   * @return The value of the 'reject' field.
   */
  public uk.gov.companieshouse.filing.processed.RejectRecord getReject() {
    return reject;
  }

  /**
   * Sets the value of the 'reject' field.
   * @param value the value to set.
   */
  public void setReject(uk.gov.companieshouse.filing.processed.RejectRecord value) {
    this.reject = value;
  }

  /**
   * Creates a new ResponseRecord RecordBuilder.
   * @return A new ResponseRecord RecordBuilder
   */
  public static uk.gov.companieshouse.filing.processed.ResponseRecord.Builder newBuilder() {
    return new uk.gov.companieshouse.filing.processed.ResponseRecord.Builder();
  }

  /**
   * Creates a new ResponseRecord RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ResponseRecord RecordBuilder
   */
  public static uk.gov.companieshouse.filing.processed.ResponseRecord.Builder newBuilder(uk.gov.companieshouse.filing.processed.ResponseRecord.Builder other) {
    return new uk.gov.companieshouse.filing.processed.ResponseRecord.Builder(other);
  }

  /**
   * Creates a new ResponseRecord RecordBuilder by copying an existing ResponseRecord instance.
   * @param other The existing instance to copy.
   * @return A new ResponseRecord RecordBuilder
   */
  public static uk.gov.companieshouse.filing.processed.ResponseRecord.Builder newBuilder(uk.gov.companieshouse.filing.processed.ResponseRecord other) {
    return new uk.gov.companieshouse.filing.processed.ResponseRecord.Builder(other);
  }

  /**
   * RecordBuilder for ResponseRecord instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ResponseRecord>
    implements org.apache.avro.data.RecordBuilder<ResponseRecord> {

    private java.lang.String company_name;
    private java.lang.String company_number;
    private java.lang.String date_of_creation;
    private java.lang.String processed_at;
    private java.lang.String status;
    private java.lang.String submission_id;
    private uk.gov.companieshouse.filing.processed.RejectRecord reject;
    private uk.gov.companieshouse.filing.processed.RejectRecord.Builder rejectBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(uk.gov.companieshouse.filing.processed.ResponseRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.company_name)) {
        this.company_name = data().deepCopy(fields()[0].schema(), other.company_name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.company_number)) {
        this.company_number = data().deepCopy(fields()[1].schema(), other.company_number);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.date_of_creation)) {
        this.date_of_creation = data().deepCopy(fields()[2].schema(), other.date_of_creation);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.processed_at)) {
        this.processed_at = data().deepCopy(fields()[3].schema(), other.processed_at);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.status)) {
        this.status = data().deepCopy(fields()[4].schema(), other.status);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.submission_id)) {
        this.submission_id = data().deepCopy(fields()[5].schema(), other.submission_id);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.reject)) {
        this.reject = data().deepCopy(fields()[6].schema(), other.reject);
        fieldSetFlags()[6] = true;
      }
      if (other.hasRejectBuilder()) {
        this.rejectBuilder = uk.gov.companieshouse.filing.processed.RejectRecord.newBuilder(other.getRejectBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing ResponseRecord instance
     * @param other The existing instance to copy.
     */
    private Builder(uk.gov.companieshouse.filing.processed.ResponseRecord other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.company_name)) {
        this.company_name = data().deepCopy(fields()[0].schema(), other.company_name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.company_number)) {
        this.company_number = data().deepCopy(fields()[1].schema(), other.company_number);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.date_of_creation)) {
        this.date_of_creation = data().deepCopy(fields()[2].schema(), other.date_of_creation);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.processed_at)) {
        this.processed_at = data().deepCopy(fields()[3].schema(), other.processed_at);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.status)) {
        this.status = data().deepCopy(fields()[4].schema(), other.status);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.submission_id)) {
        this.submission_id = data().deepCopy(fields()[5].schema(), other.submission_id);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.reject)) {
        this.reject = data().deepCopy(fields()[6].schema(), other.reject);
        fieldSetFlags()[6] = true;
      }
      this.rejectBuilder = null;
    }

    /**
      * Gets the value of the 'company_name' field.
      * @return The value.
      */
    public java.lang.String getCompanyName() {
      return company_name;
    }

    /**
      * Sets the value of the 'company_name' field.
      * @param value The value of 'company_name'.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.ResponseRecord.Builder setCompanyName(java.lang.String value) {
      validate(fields()[0], value);
      this.company_name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'company_name' field has been set.
      * @return True if the 'company_name' field has been set, false otherwise.
      */
    public boolean hasCompanyName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'company_name' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.ResponseRecord.Builder clearCompanyName() {
      company_name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'company_number' field.
      * @return The value.
      */
    public java.lang.String getCompanyNumber() {
      return company_number;
    }

    /**
      * Sets the value of the 'company_number' field.
      * @param value The value of 'company_number'.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.ResponseRecord.Builder setCompanyNumber(java.lang.String value) {
      validate(fields()[1], value);
      this.company_number = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'company_number' field has been set.
      * @return True if the 'company_number' field has been set, false otherwise.
      */
    public boolean hasCompanyNumber() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'company_number' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.ResponseRecord.Builder clearCompanyNumber() {
      company_number = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'date_of_creation' field.
      * @return The value.
      */
    public java.lang.String getDateOfCreation() {
      return date_of_creation;
    }

    /**
      * Sets the value of the 'date_of_creation' field.
      * @param value The value of 'date_of_creation'.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.ResponseRecord.Builder setDateOfCreation(java.lang.String value) {
      validate(fields()[2], value);
      this.date_of_creation = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'date_of_creation' field has been set.
      * @return True if the 'date_of_creation' field has been set, false otherwise.
      */
    public boolean hasDateOfCreation() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'date_of_creation' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.ResponseRecord.Builder clearDateOfCreation() {
      date_of_creation = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'processed_at' field.
      * @return The value.
      */
    public java.lang.String getProcessedAt() {
      return processed_at;
    }

    /**
      * Sets the value of the 'processed_at' field.
      * @param value The value of 'processed_at'.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.ResponseRecord.Builder setProcessedAt(java.lang.String value) {
      validate(fields()[3], value);
      this.processed_at = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'processed_at' field has been set.
      * @return True if the 'processed_at' field has been set, false otherwise.
      */
    public boolean hasProcessedAt() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'processed_at' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.ResponseRecord.Builder clearProcessedAt() {
      processed_at = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.ResponseRecord.Builder setStatus(java.lang.String value) {
      validate(fields()[4], value);
      this.status = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.ResponseRecord.Builder clearStatus() {
      status = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'submission_id' field.
      * @return The value.
      */
    public java.lang.String getSubmissionId() {
      return submission_id;
    }

    /**
      * Sets the value of the 'submission_id' field.
      * @param value The value of 'submission_id'.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.ResponseRecord.Builder setSubmissionId(java.lang.String value) {
      validate(fields()[5], value);
      this.submission_id = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'submission_id' field has been set.
      * @return True if the 'submission_id' field has been set, false otherwise.
      */
    public boolean hasSubmissionId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'submission_id' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.ResponseRecord.Builder clearSubmissionId() {
      submission_id = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'reject' field.
      * @return The value.
      */
    public uk.gov.companieshouse.filing.processed.RejectRecord getReject() {
      return reject;
    }

    /**
      * Sets the value of the 'reject' field.
      * @param value The value of 'reject'.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.ResponseRecord.Builder setReject(uk.gov.companieshouse.filing.processed.RejectRecord value) {
      validate(fields()[6], value);
      this.rejectBuilder = null;
      this.reject = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'reject' field has been set.
      * @return True if the 'reject' field has been set, false otherwise.
      */
    public boolean hasReject() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'reject' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public uk.gov.companieshouse.filing.processed.RejectRecord.Builder getRejectBuilder() {
      if (rejectBuilder == null) {
        if (hasReject()) {
          setRejectBuilder(uk.gov.companieshouse.filing.processed.RejectRecord.newBuilder(reject));
        } else {
          setRejectBuilder(uk.gov.companieshouse.filing.processed.RejectRecord.newBuilder());
        }
      }
      return rejectBuilder;
    }

    /**
     * Sets the Builder instance for the 'reject' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public uk.gov.companieshouse.filing.processed.ResponseRecord.Builder setRejectBuilder(uk.gov.companieshouse.filing.processed.RejectRecord.Builder value) {
      clearReject();
      rejectBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'reject' field has an active Builder instance
     * @return True if the 'reject' field has an active Builder instance
     */
    public boolean hasRejectBuilder() {
      return rejectBuilder != null;
    }

    /**
      * Clears the value of the 'reject' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.processed.ResponseRecord.Builder clearReject() {
      reject = null;
      rejectBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public ResponseRecord build() {
      try {
        ResponseRecord record = new ResponseRecord();
        record.company_name = fieldSetFlags()[0] ? this.company_name : (java.lang.String) defaultValue(fields()[0]);
        record.company_number = fieldSetFlags()[1] ? this.company_number : (java.lang.String) defaultValue(fields()[1]);
        record.date_of_creation = fieldSetFlags()[2] ? this.date_of_creation : (java.lang.String) defaultValue(fields()[2]);
        record.processed_at = fieldSetFlags()[3] ? this.processed_at : (java.lang.String) defaultValue(fields()[3]);
        record.status = fieldSetFlags()[4] ? this.status : (java.lang.String) defaultValue(fields()[4]);
        record.submission_id = fieldSetFlags()[5] ? this.submission_id : (java.lang.String) defaultValue(fields()[5]);
        if (rejectBuilder != null) {
          record.reject = this.rejectBuilder.build();
        } else {
          record.reject = fieldSetFlags()[6] ? this.reject : (uk.gov.companieshouse.filing.processed.RejectRecord) defaultValue(fields()[6]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
