/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package uk.gov.companieshouse.filing.received;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Transaction extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1611617001826738568L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Transaction\",\"namespace\":\"uk.gov.companieshouse.filing.received\",\"fields\":[{\"name\":\"data\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"kind\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"submission_language\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"submission_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String data;
  @Deprecated public java.lang.String kind;
  @Deprecated public java.lang.String submission_language;
  @Deprecated public java.lang.String submission_id;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Transaction() {}

  /**
   * All-args constructor.
   * @param data The new value for data
   * @param kind The new value for kind
   * @param submission_language The new value for submission_language
   * @param submission_id The new value for submission_id
   */
  public Transaction(java.lang.String data, java.lang.String kind, java.lang.String submission_language, java.lang.String submission_id) {
    this.data = data;
    this.kind = kind;
    this.submission_language = submission_language;
    this.submission_id = submission_id;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return data;
    case 1: return kind;
    case 2: return submission_language;
    case 3: return submission_id;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: data = (java.lang.String)value$; break;
    case 1: kind = (java.lang.String)value$; break;
    case 2: submission_language = (java.lang.String)value$; break;
    case 3: submission_id = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'data' field.
   * @return The value of the 'data' field.
   */
  public java.lang.String getData() {
    return data;
  }

  /**
   * Sets the value of the 'data' field.
   * @param value the value to set.
   */
  public void setData(java.lang.String value) {
    this.data = value;
  }

  /**
   * Gets the value of the 'kind' field.
   * @return The value of the 'kind' field.
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * Sets the value of the 'kind' field.
   * @param value the value to set.
   */
  public void setKind(java.lang.String value) {
    this.kind = value;
  }

  /**
   * Gets the value of the 'submission_language' field.
   * @return The value of the 'submission_language' field.
   */
  public java.lang.String getSubmissionLanguage() {
    return submission_language;
  }

  /**
   * Sets the value of the 'submission_language' field.
   * @param value the value to set.
   */
  public void setSubmissionLanguage(java.lang.String value) {
    this.submission_language = value;
  }

  /**
   * Gets the value of the 'submission_id' field.
   * @return The value of the 'submission_id' field.
   */
  public java.lang.String getSubmissionId() {
    return submission_id;
  }

  /**
   * Sets the value of the 'submission_id' field.
   * @param value the value to set.
   */
  public void setSubmissionId(java.lang.String value) {
    this.submission_id = value;
  }

  /**
   * Creates a new Transaction RecordBuilder.
   * @return A new Transaction RecordBuilder
   */
  public static uk.gov.companieshouse.filing.received.Transaction.Builder newBuilder() {
    return new uk.gov.companieshouse.filing.received.Transaction.Builder();
  }

  /**
   * Creates a new Transaction RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Transaction RecordBuilder
   */
  public static uk.gov.companieshouse.filing.received.Transaction.Builder newBuilder(uk.gov.companieshouse.filing.received.Transaction.Builder other) {
    return new uk.gov.companieshouse.filing.received.Transaction.Builder(other);
  }

  /**
   * Creates a new Transaction RecordBuilder by copying an existing Transaction instance.
   * @param other The existing instance to copy.
   * @return A new Transaction RecordBuilder
   */
  public static uk.gov.companieshouse.filing.received.Transaction.Builder newBuilder(uk.gov.companieshouse.filing.received.Transaction other) {
    return new uk.gov.companieshouse.filing.received.Transaction.Builder(other);
  }

  /**
   * RecordBuilder for Transaction instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Transaction>
    implements org.apache.avro.data.RecordBuilder<Transaction> {

    private java.lang.String data;
    private java.lang.String kind;
    private java.lang.String submission_language;
    private java.lang.String submission_id;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(uk.gov.companieshouse.filing.received.Transaction.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.data)) {
        this.data = data().deepCopy(fields()[0].schema(), other.data);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.kind)) {
        this.kind = data().deepCopy(fields()[1].schema(), other.kind);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.submission_language)) {
        this.submission_language = data().deepCopy(fields()[2].schema(), other.submission_language);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.submission_id)) {
        this.submission_id = data().deepCopy(fields()[3].schema(), other.submission_id);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Transaction instance
     * @param other The existing instance to copy.
     */
    private Builder(uk.gov.companieshouse.filing.received.Transaction other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.data)) {
        this.data = data().deepCopy(fields()[0].schema(), other.data);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.kind)) {
        this.kind = data().deepCopy(fields()[1].schema(), other.kind);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.submission_language)) {
        this.submission_language = data().deepCopy(fields()[2].schema(), other.submission_language);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.submission_id)) {
        this.submission_id = data().deepCopy(fields()[3].schema(), other.submission_id);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'data' field.
      * @return The value.
      */
    public java.lang.String getData() {
      return data;
    }

    /**
      * Sets the value of the 'data' field.
      * @param value The value of 'data'.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.received.Transaction.Builder setData(java.lang.String value) {
      validate(fields()[0], value);
      this.data = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'data' field has been set.
      * @return True if the 'data' field has been set, false otherwise.
      */
    public boolean hasData() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'data' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.received.Transaction.Builder clearData() {
      data = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'kind' field.
      * @return The value.
      */
    public java.lang.String getKind() {
      return kind;
    }

    /**
      * Sets the value of the 'kind' field.
      * @param value The value of 'kind'.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.received.Transaction.Builder setKind(java.lang.String value) {
      validate(fields()[1], value);
      this.kind = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'kind' field has been set.
      * @return True if the 'kind' field has been set, false otherwise.
      */
    public boolean hasKind() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'kind' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.received.Transaction.Builder clearKind() {
      kind = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'submission_language' field.
      * @return The value.
      */
    public java.lang.String getSubmissionLanguage() {
      return submission_language;
    }

    /**
      * Sets the value of the 'submission_language' field.
      * @param value The value of 'submission_language'.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.received.Transaction.Builder setSubmissionLanguage(java.lang.String value) {
      validate(fields()[2], value);
      this.submission_language = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'submission_language' field has been set.
      * @return True if the 'submission_language' field has been set, false otherwise.
      */
    public boolean hasSubmissionLanguage() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'submission_language' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.received.Transaction.Builder clearSubmissionLanguage() {
      submission_language = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'submission_id' field.
      * @return The value.
      */
    public java.lang.String getSubmissionId() {
      return submission_id;
    }

    /**
      * Sets the value of the 'submission_id' field.
      * @param value The value of 'submission_id'.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.received.Transaction.Builder setSubmissionId(java.lang.String value) {
      validate(fields()[3], value);
      this.submission_id = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'submission_id' field has been set.
      * @return True if the 'submission_id' field has been set, false otherwise.
      */
    public boolean hasSubmissionId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'submission_id' field.
      * @return This builder.
      */
    public uk.gov.companieshouse.filing.received.Transaction.Builder clearSubmissionId() {
      submission_id = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public Transaction build() {
      try {
        Transaction record = new Transaction();
        record.data = fieldSetFlags()[0] ? this.data : (java.lang.String) defaultValue(fields()[0]);
        record.kind = fieldSetFlags()[1] ? this.kind : (java.lang.String) defaultValue(fields()[1]);
        record.submission_language = fieldSetFlags()[2] ? this.submission_language : (java.lang.String) defaultValue(fields()[2]);
        record.submission_id = fieldSetFlags()[3] ? this.submission_id : (java.lang.String) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
